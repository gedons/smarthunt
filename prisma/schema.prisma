// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  auth0Id       String    @unique
  email         String    @unique
  name          String?
  avatarUrl     String?
  resumeUrl     String?
  resumeText    String?  
  vector        Float[] @default([])
  skills        String[]  @default([])
  preferences   Json?
  role          UserRole  @default(USER)
  applications  Application[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Job {
  id           String   @id @default(cuid())
  title        String
  company      String?
  location     String?
  remote       Boolean  @default(false)
  url          String   @unique   
  description  String?  @db.Text
  tags         String[] @default([])
  salary       String?
  source       JobSource
  sourceId     String?
  scrapedAt    DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  embedding    JobEmbedding?

  @@unique([source, url])
}

model Application {
  id            String   @id @default(cuid())
  userId        String
  jobTitle      String
  company       String
  jobUrl        String
  status        String   @default("pending")
  coverLetter   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  user          User @relation(fields: [userId], references: [id])
}

model JobEmbedding {
  id        String   @id @default(cuid())
  jobId     String   @unique
  embedding Float[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  job       Job @relation(fields: [jobId], references: [id])
}


enum UserRole {
  USER
  ADMIN
}

enum JobSource {
  REMOTEOK
  WEWORKREMOTELY
  WELLFOUND
  INDEED
  UNKNOWN
}
